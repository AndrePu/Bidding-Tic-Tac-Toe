<Window x:Class="Bidding_Tic_Tac_Toe.SetBotDifficultyWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Bidding_Tic_Tac_Toe"
        mc:Ignorable="d"
      Title="NewGame_Menu" Background="Transparent" Height="380" Width="360" WindowStartupLocation="CenterScreen" AllowsTransparency="True" WindowStyle="None" Foreground="Transparent" KeyDown="Window_KeyDown">
    <Window.Resources>

        <!--Creating alive border for rectangle-->
        <Storyboard x:Key="BorderColor" RepeatBehavior="Forever"/>

        <!--Making colors template for button events-->
        <ImageBrush x:Key="Button.Static.Background" ImageSource="Resources/Background4.jpg"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF16E500"/>
        <SolidColorBrush x:Key="Button.Static.Foreground" Color="#FF16E500"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF16E500"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFA3FCB4"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF008E16"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <!--Creating a style for button template-->
        <Style TargetType="{x:Type Button}">
            <Setter Property="Width" Value="200"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="FontFamily" Value="Snap ITC"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{StaticResource Button.Static.Foreground}"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="20">
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter.Effect>
                                    <DropShadowEffect/>
                                </ContentPresenter.Effect>
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <!--Run storyboard to make alive window border-->
    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard x:Name="BorderColor_BeginStoryboard" Storyboard="{StaticResource BorderColor}"/>
        </EventTrigger>
    </Window.Triggers>
</Window>
