<Window x:Class="Bidding_Tic_Tac_Toe.MainMenu"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Bidding_Tic_Tac_Toe"
        mc:Ignorable="d"
        Title="MainMenu" Height="480" Width="360" WindowStartupLocation="CenterScreen" AllowsTransparency="True" WindowStyle="None" Background="Transparent" KeyDown="Window_KeyDown">
    <Window.Resources>
        
        <!--Creating alive border for rectangle-->
        <Storyboard x:Key="BorderColor" RepeatBehavior="Forever">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
                <EasingDoubleKeyFrame KeyTime="0:0:15" Value="0.177"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
                <EasingDoubleKeyFrame KeyTime="0:0:15" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
                <EasingDoubleKeyFrame KeyTime="0:0:15" Value="0.549"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[3].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
                <EasingDoubleKeyFrame KeyTime="0:0:15" Value="0.345"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[4].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
                <EasingDoubleKeyFrame KeyTime="0:0:15" Value="0.765"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <!--Making colors template for button events-->
         <ImageBrush x:Key="Button.Static.Background" ImageSource="Resources/Background4.jpg"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF16E500"/>
        <SolidColorBrush x:Key="Button.Static.Foreground" Color="#FF16E500"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF16E500"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFA3FCB4"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF008E16"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        
        <!--Creating a style for button template-->
        <Style TargetType="{x:Type Button}">
            <Setter Property="Width" Value="200"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="FontFamily" Value="Snap ITC"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{StaticResource Button.Static.Foreground}"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="20">
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter.Effect>
                                    <DropShadowEffect/>
                                </ContentPresenter.Effect>
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <!--Run storyboard to make alive window border-->
    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource BorderColor}"/>
        </EventTrigger>
    </Window.Triggers>
    
    
    <Grid>
        
        <!--Setting columns and rows allocation -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="77*"/>
            <ColumnDefinition Width="200*"/>
            <ColumnDefinition Width="77*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="160*"/>
            <RowDefinition Height="53*"/>
            <RowDefinition Height="27*"/>
            <RowDefinition Height="53.215"/>
            <RowDefinition Height="187*"/>
        </Grid.RowDefinitions>
        
        <!--Forming our frame for menu-->
        <Rectangle x:Name="rectangle" Grid.ColumnSpan="3" HorizontalAlignment="Right" Height="478.4" Margin="0,0,0,0" RadiusY="20" RadiusX="20" Grid.RowSpan="5" StrokeThickness="2" VerticalAlignment="Top" Width="358.4" MouseLeftButtonDown="Rectangle_MouseLeftButtonDown">
            <Rectangle.Stroke>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FF16E500" Offset="0.823"/>
                    <GradientStop Color="White"/>
                    <GradientStop Color="White" Offset="0.451"/>
                    <GradientStop Color="#FFC3F8BD" Offset="0.655"/>
                    <GradientStop Color="#FF16E500" Offset="0.235"/>
                </LinearGradientBrush>
            </Rectangle.Stroke>
            <Rectangle.Fill>
                <ImageBrush ImageSource="Resources/Background2.jpg"/>
            </Rectangle.Fill>
        </Rectangle>

        <!--Creating app name with DropShadow effect and gradient fill-->
        <TextBlock Grid.ColumnSpan="3" HorizontalAlignment="Center" Height="100" Margin="0,20,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="275" Text="Bidding Tic Tac Toe" FontSize="36" FontFamily="Snap ITC" TextAlignment="Center" >
            <TextBlock.Effect>
                <DropShadowEffect/>
            </TextBlock.Effect>
            <TextBlock.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FF16E500" Offset="0.241"/>
                    <GradientStop Color="White" Offset="1"/>
                </LinearGradientBrush>
            </TextBlock.Foreground>
        </TextBlock>

        <!--Creating our main buttons-->
        <Button x:Name="newGame_Button" Content="New Game" Grid.Row ="1" Grid.Column="1" Click="newGame_Button_Click"/>
        <Button x:Name="exit_Button" Content="EXIT" Grid.Row="3" Grid.Column ="1" Click="exit_Button_Click"/>
        
    </Grid>
</Window>
